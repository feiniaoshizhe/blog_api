services:
  api: &main_app
    build:
      context: .
      dockerfile: ./Dockerfile
    image: blog_api:${BLOG_API_VERSION:-latest}
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      BLOG_API_HOST: 0.0.0.0
      BLOG_API_DB_HOST: blog_api-db
      BLOG_API_DB_PORT: 3306
      BLOG_API_DB_USER: blog_api
      BLOG_API_DB_PASS: blog_api
      BLOG_API_DB_BASE: blog_api
      BLOG_API_REDIS_HOST: blog_api-redis

  db:
    image: mysql:8.4
    hostname: blog_api-db
    restart: always
    environment:
      MYSQL_ROOT_USER: "root"
      MYSQL_ROOT_PASSWORD: "blog_api"
      MYSQL_USER: "blog_api"
      MYSQL_PASSWORD: "blog_api"
      MYSQL_DATABASE: "blog_api"
      MYSQL_HOST: "0.0.0.0"
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - --user=blog_api
        - --password=blog_api
      interval: 10s
      timeout: 5s
      retries: 40
    volumes:
      - "blog_api-db-data:/bitnami/mysql/data"

  migrator:
    image: blog_api:${BLOG_API_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    environment:
      BLOG_API_DB_HOST: blog_api-db
      BLOG_API_DB_PORT: 3306
      BLOG_API_DB_USER: blog_api
      BLOG_API_DB_PASS: blog_api
      BLOG_API_DB_BASE: blog_api
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: bitnami/redis:6.2.5
    hostname: "blog_api-redis"
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 50



volumes:
  blog_api-db-data:
    name: blog_api-db-data
